---
import Breadcrumbs from "../components/Breadcrumbs.astro";
import SiteFooter from "../components/SiteFooter.astro";
import SiteHeader from "../components/SiteHeader.astro";
import Close from "../icons/Close.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import Callout from "../components/Callout.astro";
import {getCollection} from 'astro:content';
import PortableText from "../components/portableText/PortableText.astro";
import {urlFor} from "../data/_utils";


export async function getStaticPaths() {
    const articles = await getCollection('articles');

    return articles.map((result: any) => ({
        params: {
            articleSlug: result.data.fullSlug,
        },
        props: {
            article: result.data,
        },
    }))
}

const {article} = Astro.props;
---

<BaseLayout
  metaTitle={article.title}
  metaDescription={article.leading}
  metaImageUrl={article.featuredImage && urlFor(article.featuredImageRaw).width(1200).url()}
>
  <div class="l-site">
    <SiteHeader />
    <main>
      <div class="l-constraint">
        <Breadcrumbs items={article.breadcrumbs} current={article.title} />
        <article class="post">
          <header class="post__header">
              {
                  article.featuredImage && article.showAsBanner && (
                  <figure class="post__featured-image">
                    <picture data-dialog-trigger>
                      <source
                        media="(max-width: 600px)"
                        srcset={urlFor(article.featuredImageRaw).width(600).url()}
                      />
                      <img
                        src={urlFor(article.featuredImageRaw).width(800).url()}
                        alt=""
                        loading="lazy"
                      />
                    </picture>
                    <dialog class="image-dialog">
                      <figure>
                        <picture>
                          <source
                            media="(max-width: 600px)"
                            srcset={urlFor(article.featuredImageRaw).width(400).fit("max").url()}
                          />
                          <source
                            media="(max-width: 1000px)"
                            srcset={urlFor(article.featuredImageRaw).width(1000).fit("max").url()}
                          />
                          <source
                            media="(max-width: 1200px)"
                            srcset={urlFor(article.featuredImageRaw).width(1200).fit("max").url()}
                          />
                          <source
                            media="(max-width: 1600px)"
                            srcset={urlFor(article.featuredImageRaw).width(1600).fit("max").url()}
                          />
                          <img
                            src={urlFor(article.featuredImageRaw).width(2000).fit("max").url()}
                            alt=""
                            loading="lazy"
                          />
                        </picture>
                        <button class="image-dialog__close">
                          <Close />
                        </button>
                      </figure>
                    </dialog>
                  </figure>
                  )
              }
            <div class="post__meta">
              <a href={article.tag.slug} class="tag">{article.tag.title}</a>
              <span class="post__meta-item"
              >{article.readingTime} minute read</span
              >
              <span class="post__meta-item">{article.publishedDate}</span>
            </div>
            <h1 class="post__title">{article.title}</h1>
              {article.leading && <p class="post__leading">{article.leading}</p>}
          </header>
          <div class="post__body | u-rich-text">
              {
                  article.publishedExternally && (
                  <Callout
                    text={article.publishedExternally.text}
                    href={article.publishedExternally.href}
                    image={article.publishedExternally.image}
                  />
                  )
              }
            <div class="u-rich-text">
              <PortableText portableText={article.body} />
            </div>
          </div>
        </article>
      </div>
    </main>
    <SiteFooter />
  </div>
</BaseLayout>


