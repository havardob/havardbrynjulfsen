---
import BaseLayout from "../layouts/BaseLayout.astro";
import Breadcrumbs from "../components/Breadcrumbs.astro";
import {getCollection} from "astro:content";
import SiteHeader from "../components/SiteHeader.astro";
import PostPreview from "../components/PostPreview.astro";
import SiteFooter from "../components/SiteFooter.astro";
import ProjectPreview from "../components/ProjectPreview.astro";

export async function getStaticPaths() {
    const tagCollection = await getCollection('tags');
    const articleCollection = await getCollection('articles');
    const creationCollection = await getCollection('creations');

    let articles: any[] = [];
    let creations: any[] = [];
    articleCollection.map((article: any) => articles.push(article.data));
    creationCollection.map((creation: any) => creations.push(creation.data));

    return await Promise.all(
        tagCollection.map(async (result: any) => {
            const filteredArticles = articles.filter((article) => {
              if (article.tags && article.tags.length > 0) {
              return article.tags.some((tag: any) => tag._id === result.data._id);
              } else {
                return article.tag._id === result.data._id;
              }
            });
            const filteredCreations = creations.filter(creation => creation.tag._id === result.data._id);
            return {
                params: {
                    tagSlug: result.data.fullSlug,
                },
                props: {
                    tagPage: result.data,
                    articles: filteredArticles,
                    creations: filteredCreations
                }
            }
        }))
}

const {tagPage, articles, creations} = Astro.props;
---

<BaseLayout metaTitle={tagPage.title} metaDescription={tagPage.leading}>
  <div class="l-site">
    <SiteHeader />
    <main>
      <div class="l-constraint">
        <Breadcrumbs items={tagPage.breadcrumbs} current={tagPage.title} />
        <div class="archive-page">
          <div class="archive-page__header">
            <h2 class="archive-page__title">
                {tagPage.title}
            </h2>
            <div class="archive-page__intro">
                {tagPage.type == "creation" ? (
                  <p>Creations tagged "{tagPage.title}"</p>
                ) : (
                  <p>Posts tagged "{tagPage.title}"</p>
                )}
            </div>
          </div>
            {tagPage.type == "creation" && (
              <div class="projects">
                <ul class="projects__list">
                    {creations.map((item: any) => (
                      <li class="projects__list-item">
                        <ProjectPreview
                          title={item.title}
                          image={item.featuredImage}
                          slug={item.fullSlug}
                          tagline={item.tagline}
                          tag={item.tag}
                        />
                      </li>
                    ))}
                </ul>
              </div>
            )}
            {tagPage.type == "article" && (
              <div class="posts">
                <ul class="posts-list">
                    {
                        articles.map((item: any) => (
                          <li class="posts-list__item">
                            <PostPreview
                              title={item.title}
                              excerpt={item.leading}
                              slug={item.fullSlug}
                              readingTime={item.readingTime}
                              publishedDate={item.publishedDate}
                              tag={item.tag}
                              tags={item.tags}
                              external={{
                                  image: item.publishedExternally
                                      ?.image,
                                  href: item.publishedExternally
                                      ?.href,
                                  text: item.publishedExternally
                                      ?.text,
                              }}
                            />
                          </li>
                        ))
                    }
                </ul>
              </div>
            )}
        </div>
      </div>
    </main>
    <SiteFooter />
  </div>
</BaseLayout>